/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package formulario.contato.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.MVCCModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Estado service. Represents a row in the &quot;FC_Estado&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>formulario.contato.model.impl.EstadoModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>formulario.contato.model.impl.EstadoImpl</code>.
 * </p>
 *
 * @author Eglen
 * @see Estado
 * @generated
 */
@ProviderType
public interface EstadoModel
	extends BaseModel<Estado>, GroupedModel, MVCCModel, ShardedModel,
			StagedAuditedModel, WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a estado model instance should use the {@link Estado} interface instead.
	 */

	/**
	 * Returns the primary key of this estado.
	 *
	 * @return the primary key of this estado
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this estado.
	 *
	 * @param primaryKey the primary key of this estado
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the mvcc version of this estado.
	 *
	 * @return the mvcc version of this estado
	 */
	@Override
	public long getMvccVersion();

	/**
	 * Sets the mvcc version of this estado.
	 *
	 * @param mvccVersion the mvcc version of this estado
	 */
	@Override
	public void setMvccVersion(long mvccVersion);

	/**
	 * Returns the uuid of this estado.
	 *
	 * @return the uuid of this estado
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this estado.
	 *
	 * @param uuid the uuid of this estado
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the estado ID of this estado.
	 *
	 * @return the estado ID of this estado
	 */
	public long getEstadoId();

	/**
	 * Sets the estado ID of this estado.
	 *
	 * @param estadoId the estado ID of this estado
	 */
	public void setEstadoId(long estadoId);

	/**
	 * Returns the nome of this estado.
	 *
	 * @return the nome of this estado
	 */
	@AutoEscape
	public String getNome();

	/**
	 * Sets the nome of this estado.
	 *
	 * @param nome the nome of this estado
	 */
	public void setNome(String nome);

	/**
	 * Returns the sigla of this estado.
	 *
	 * @return the sigla of this estado
	 */
	@AutoEscape
	public String getSigla();

	/**
	 * Sets the sigla of this estado.
	 *
	 * @param sigla the sigla of this estado
	 */
	public void setSigla(String sigla);

	/**
	 * Returns the codigo of this estado.
	 *
	 * @return the codigo of this estado
	 */
	@AutoEscape
	public String getCodigo();

	/**
	 * Sets the codigo of this estado.
	 *
	 * @param codigo the codigo of this estado
	 */
	public void setCodigo(String codigo);

	/**
	 * Returns the cidade of this estado.
	 *
	 * @return the cidade of this estado
	 */
	@AutoEscape
	public String getCidade();

	/**
	 * Sets the cidade of this estado.
	 *
	 * @param cidade the cidade of this estado
	 */
	public void setCidade(String cidade);

	/**
	 * Returns the group ID of this estado.
	 *
	 * @return the group ID of this estado
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this estado.
	 *
	 * @param groupId the group ID of this estado
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this estado.
	 *
	 * @return the company ID of this estado
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this estado.
	 *
	 * @param companyId the company ID of this estado
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this estado.
	 *
	 * @return the user ID of this estado
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this estado.
	 *
	 * @param userId the user ID of this estado
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this estado.
	 *
	 * @return the user uuid of this estado
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this estado.
	 *
	 * @param userUuid the user uuid of this estado
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this estado.
	 *
	 * @return the user name of this estado
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this estado.
	 *
	 * @param userName the user name of this estado
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this estado.
	 *
	 * @return the create date of this estado
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this estado.
	 *
	 * @param createDate the create date of this estado
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this estado.
	 *
	 * @return the modified date of this estado
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this estado.
	 *
	 * @param modifiedDate the modified date of this estado
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the status of this estado.
	 *
	 * @return the status of this estado
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this estado.
	 *
	 * @param status the status of this estado
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this estado.
	 *
	 * @return the status by user ID of this estado
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this estado.
	 *
	 * @param statusByUserId the status by user ID of this estado
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this estado.
	 *
	 * @return the status by user uuid of this estado
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this estado.
	 *
	 * @param statusByUserUuid the status by user uuid of this estado
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this estado.
	 *
	 * @return the status by user name of this estado
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this estado.
	 *
	 * @param statusByUserName the status by user name of this estado
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this estado.
	 *
	 * @return the status date of this estado
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this estado.
	 *
	 * @param statusDate the status date of this estado
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns <code>true</code> if this estado is approved.
	 *
	 * @return <code>true</code> if this estado is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this estado is denied.
	 *
	 * @return <code>true</code> if this estado is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this estado is a draft.
	 *
	 * @return <code>true</code> if this estado is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this estado is expired.
	 *
	 * @return <code>true</code> if this estado is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this estado is inactive.
	 *
	 * @return <code>true</code> if this estado is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this estado is incomplete.
	 *
	 * @return <code>true</code> if this estado is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this estado is pending.
	 *
	 * @return <code>true</code> if this estado is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this estado is scheduled.
	 *
	 * @return <code>true</code> if this estado is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

}